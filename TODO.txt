TODO list
=========

test for always flush (together with line number), and command line option

use <ol> lists and css for changing colors of lines,
see http://shiflett.org/code/highlight.php

shjs_css_transform.sh in share

background color in some .css in doc (for TODO)

the default ctags command line option should contain the
actual found ctags

line-range

CODE CLEANUP

the style file is always parsed even for output formats that don't need it...
but how to infer whether the style must be read or not?
IMPORTANT: this is crucial for output generation such as CSS that produces
elements with the class syntax: if that element is not in the style file that
element will be generated with class normal but this is not really correct...

GROUPS

also string def as StringDef

Is there an element class that is not a StateStartLangElem?

check empty alternative in string def: "foo||" which would lead
to a non-terminating program

USE GENGETOPT DETAILS

LANG FILES
----------
recognize kde rc files

TOWARDS LIBRARY
---------------
the regexpengine highlighting method should also return the current state/environment?
This way the qt highlighter can detect how many lines to highlight?
But this way, we should have all different states (already like this)
Probably we only need the GUID (without the alternatives):
each state represents an actual state, and we should use a different class for
alternatives (that will be put into a list):

- in case of a single line rule that is split with states, avoid to match \n or \r? In order
to do so, we should not return immediately after matching the entering state, and
wait to exit the state to match the whole exp

- startLine endLine: use a LineNumberGenerator?

- RegexPreprocessor should not contain code dealing with boost::regex?

- in LineRule is it really required to put the [^...]?

- use also line prefix in order to write line number in a different column
than the source highlighted code.

- outputfilename and outputfilename extension do not concern the formatter?
the only thing that should be passed to format() should be linenumber and filename?
  - why refentry.filename == fileinfo->filename || refentry.filename
                    == fileinfo->input_file_name) also input_file_name (no path)?
                    
- line numbers and code in different columns when generating tables (probably use
linesuffix)?

- implement ctags:
  Are the input and output file useful in ctagsformatter?  Or could we put it into
  FormatterParams?

test with source-highlight ide (debug)
