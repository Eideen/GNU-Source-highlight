@c Generator: GNU source-highlight, by Lorenzo Bettini, http://www.gnu.org/software/src-highlite
@example
@t{01:} @r{@i{/*}}
@t{02:} @r{@i{** Copyright (C) 1999, 2000, 2001 Lorenzo Bettini}}
@t{03:} @r{@i{**  }}
@t{04:} @r{@i{** This program is free software; you can redistribute it and/or modify}}
@t{05:} @r{@i{** it under the terms of the GNU General Public License as published by}}
@t{06:} @r{@i{** the Free Software Foundation; either version 2 of the License, or}}
@t{07:} @r{@i{** (at your option) any later version.}}
@t{08:} @r{@i{**  }}
@t{09:} @r{@i{** This program is distributed in the hope that it will be useful,}}
@t{10:} @r{@i{** but WITHOUT ANY WARRANTY; without even the implied warranty of}}
@t{11:} @r{@i{** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the}}
@t{12:} @r{@i{** GNU General Public License for more details.}}
@t{13:} @r{@i{**  }}
@t{14:} @r{@i{** You should have received a copy of the GNU General Public License}}
@t{15:} @r{@i{** along with this program; if not, write to the Free Software}}
@t{16:} @r{@i{** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.}}
@t{17:} @r{@i{**  }}
@t{18:} @r{@i{*/}}
@t{19:} 
@t{20:} @r{@i{// this file also contains the definition of mysum as a #define}}
@t{21:} 
@t{22:} @r{@i{// textgenerator.h : Text Generator class &&}}
@t{23:} 
@t{24:} @b{#ifndef} _TEXTGEN_H
@flushright
@r{@i{@xref{test.h:25,_TEXTGEN_H,_TEXTGEN_H test.h:25}.}}
@end flushright
@t{25:} @b{#define} @anchor{test.h:25}_TEXTGEN_H
@t{26:} 
@t{27:} @b{#define} @anchor{test.h:27}foo(x) (x + 1)
@t{28:} 
@t{29:} @b{#define} @anchor{test.h:29}mysum myfunbody 
@t{30:} 
@t{31:} @b{#include} @t{<iostream.h>} @r{@i{// for cerr}}
@t{32:} 
@t{33:} @b{#include} @t{"genfun.h"} @r{@i{/* for generating functions */}}
@t{34:} 
@t{35:} @b{class} @anchor{test.h:35}TextGenerator @{
@t{36:}   @b{public} :
@t{37:}     @b{virtual} @b{void} @anchor{test.h:37}generate( @b{const} @b{char} *s ) @b{const} @{ (*sout) << s ; @}
@t{38:}     @b{virtual} @b{void} @anchor{test.h:38}generate( @b{const} @b{char} *s, @b{int} start, @b{int} end ) @b{const} 
@t{39:}       @{
@t{40:}         @b{for} ( @b{int} i = start ; i <= end ; ++i )
@t{41:}           (*sout) << s[i] ;
@t{42:}         @b{return} a<p->b ? a : 3;
@t{43:}       @}
@t{44:}     @b{virtual} @b{void} @anchor{test.h:44}generateln( @b{const} @b{char} *s ) @b{const}
@t{45:}         @{ 
@t{46:}             generate( s ) ;
@flushright
@r{@i{@xref{test.h:37,generate,generate test.h:37}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:38,generate,generate test.h:38}.}}
@end flushright
@t{47:}             (*sout) << endl ; 
@t{48:}         @}
@t{49:}     @b{virtual} @b{void} @anchor{test.h:49}generateEntire( @b{const} @b{char} *s ) @b{const}
@t{50:}         @{
@t{51:}             startTextGeneration() ;
@flushright
@r{@i{@xref{test.h:55,startTextGeneration,startTextGeneration test.h:55}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:79,startTextGeneration,startTextGeneration test.h:79}.}}
@end flushright
@t{52:}             generate(s) ;
@flushright
@r{@i{@xref{test.h:37,generate,generate test.h:37}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:38,generate,generate test.h:38}.}}
@end flushright
@t{53:}             endTextGeneration() ;
@flushright
@r{@i{@xref{test.h:56,endTextGeneration,endTextGeneration test.h:56}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:85,endTextGeneration,endTextGeneration test.h:85}.}}
@end flushright
@t{54:}         @}
@t{55:}     @b{virtual} @b{void} @anchor{test.h:55}startTextGeneration() @b{const} @{@}
@t{56:}     @b{virtual} @b{void} @anchor{test.h:56}endTextGeneration() @b{const} @{@}
@t{57:}     @b{virtual} @b{void} @anchor{test.h:57}beginText( @b{const} @b{char} *s ) @b{const}
@t{58:}         @{
@t{59:}             startTextGeneration() ;
@flushright
@r{@i{@xref{test.h:55,startTextGeneration,startTextGeneration test.h:55}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:79,startTextGeneration,startTextGeneration test.h:79}.}}
@end flushright
@t{60:}             @b{if} ( s )
@t{61:}                 generate( s ) ;
@flushright
@r{@i{@xref{test.h:37,generate,generate test.h:37}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:38,generate,generate test.h:38}.}}
@end flushright
@t{62:}         @}
@t{63:}     @b{virtual} @b{void} @anchor{test.h:63}endText( @b{const} @b{char} *s ) @b{const}
@t{64:}         @{
@t{65:}             @b{if} ( s )
@t{66:}                 generate( s ) ;
@flushright
@r{@i{@xref{test.h:37,generate,generate test.h:37}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:38,generate,generate test.h:38}.}}
@end flushright
@t{67:}             endTextGeneration() ;
@flushright
@r{@i{@xref{test.h:56,endTextGeneration,endTextGeneration test.h:56}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:85,endTextGeneration,endTextGeneration test.h:85}.}}
@end flushright
@t{68:}         @}
@t{69:} @} ;
@t{70:} 
@t{71:} @r{@i{// Decorator}}
@t{72:} @b{class} @anchor{test.h:72}TextDecorator : @b{public} TextGenerator @{
@flushright
@r{@i{@xref{test.h:35,TextGenerator,TextGenerator test.h:35}.}}
@end flushright
@t{73:}   @b{protected} :
@t{74:}     TextGenerator *@anchor{test.h:74}decorated ;
@flushright
@r{@i{@xref{test.h:35,TextGenerator,TextGenerator test.h:35}.}}
@end flushright
@t{75:}   
@t{76:}   @b{public} :
@t{77:}     @anchor{test.h:77}TextDecorator( TextGenerator *t ) : decorated( t ) @{@}
@flushright
@r{@i{@xref{test.h:35,TextGenerator,TextGenerator test.h:35}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:74,decorated,decorated test.h:74}.}}
@end flushright
@t{78:} 
@t{79:}     @b{virtual} @b{void} @anchor{test.h:79}startTextGeneration() @b{const} 
@t{80:}     @{ 
@t{81:}         startDecorate() ;
@t{82:}         @b{if} ( decorated )
@flushright
@r{@i{@xref{test.h:74,decorated,decorated test.h:74}.}}
@end flushright
@t{83:}             decorated->startTextGeneration() ;
@flushright
@r{@i{@xref{test.h:55,startTextGeneration,startTextGeneration test.h:55}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:74,decorated,decorated test.h:74}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:79,startTextGeneration,startTextGeneration test.h:79}.}}
@end flushright
@t{84:}     @}
@t{85:}     @b{virtual} @b{void} @anchor{test.h:85}endTextGeneration() @b{const} 
@t{86:}     @{ 
@t{87:}         @b{if} ( decorated )
@flushright
@r{@i{@xref{test.h:74,decorated,decorated test.h:74}.}}
@end flushright
@t{88:}             decorated->endTextGeneration() ;
@flushright
@r{@i{@xref{test.h:56,endTextGeneration,endTextGeneration test.h:56}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:74,decorated,decorated test.h:74}.}}
@end flushright
@flushright
@r{@i{@xref{test.h:85,endTextGeneration,endTextGeneration test.h:85}.}}
@end flushright
@t{89:}         endDecorate() ;
@t{90:}         mysum;
@flushright
@r{@i{@xref{test.h:29,mysum,mysum test.h:29}.}}
@end flushright
@t{91:}     @}
@t{92:} 
@t{93:}     @r{@i{// pure virtual functions}}
@t{94:}     @b{virtual} @b{void} startDecorate() @b{const} = 0 ;
@t{95:}     @b{virtual} @b{void} endDecorate() @b{const} = 0 ;
@t{96:} @} ;
@t{97:} 
@t{98:} @b{#endif} @r{@i{// _TEXTGEN_H}}

@end example